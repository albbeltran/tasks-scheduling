generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
  binaryTargets = ["linux-musl-arm64-openssl-3.0.x", "native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")
}

model priorities {
  id          Int     @id @default(autoincrement())
  description String  @unique @db.VarChar(20)
  tasks       tasks[]
}

model processes {
  id                Int             @id @default(autoincrement())
  scheduling_run_id Int
  task_id           Int
  started_at        DateTime?       @db.Timestamptz(6)
  ended_at          DateTime?       @db.Timestamptz(6)
  execution_order   Int
  scheduling_runs   scheduling_runs @relation(fields: [scheduling_run_id], references: [id], onDelete: Cascade)
  tasks             tasks           @relation(fields: [task_id], references: [id])

  @@index([scheduling_run_id, execution_order], map: "idx_processes_execution_order")
  @@index([scheduling_run_id], map: "idx_processes_scheduling_run_id")
  @@index([task_id], map: "idx_processes_task_id")
}

model scheduling_runs {
  id          Int         @id @default(autoincrement())
  run_at      DateTime?   @default(now()) @db.Timestamptz(6)
  description String?     @db.VarChar(255)
  processes   processes[]

  @@index([id], map: "idx_scheduling_run_id")
}

model task_status_history {
  id         Int         @id @default(autoincrement())
  task_id    Int
  status     task_status
  changed_at DateTime?   @default(now()) @db.Timestamptz(6)
  tasks      tasks       @relation(fields: [task_id], references: [id])

  @@index([task_id], map: "idx_task_status_history_task_id")
}

model tasks {
  id                  Int                   @id @default(autoincrement())
  name                String                @unique @db.VarChar(50)
  arrival_time        DateTime              @db.Timestamptz(6)
  duration            Int
  status              task_status           @default(pending)
  priority_id         Int?
  created_at          DateTime?             @default(now()) @db.Timestamptz(6)
  updated_at          DateTime?             @default(now()) @db.Timestamptz(6)
  processes           processes[]
  task_status_history task_status_history[]
  priorities          priorities?           @relation(fields: [priority_id], references: [id])

  @@index([arrival_time], map: "idx_tasks_arrival_time")
  @@index([priority_id], map: "idx_tasks_priority_id")
}

enum task_status {
  pending
  running
  completed
  failed
}
